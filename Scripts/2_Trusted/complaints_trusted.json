{
	"jobConfig": {
		"name": "complaints_trusted",
		"description": "",
		"role": "arn:aws:iam::859900066986:role/LabRole",
		"command": "glueetl",
		"version": "4.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "complaints_trusted.py",
		"scriptLocation": "s3://aws-glue-assets-859900066986-us-east-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2024-08-31T02:07:48.560Z",
		"developerMode": true,
		"connectionsList": [
			"Mysql"
		],
		"temporaryDirectory": "s3://aws-glue-assets-859900066986-us-east-1/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-859900066986-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\r\nfrom awsglue.transforms import *\r\nfrom awsglue.utils import getResolvedOptions\r\nfrom pyspark.context import SparkContext\r\nfrom pyspark.sql.functions import when, col, lpad, regexp_replace, trim, length, substring, lit\r\nfrom awsglue.context import GlueContext\r\nfrom awsglue.job import Job\r\n\r\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\r\n\r\nsc = SparkContext()\r\nglueContext = GlueContext(sc)\r\nspark = glueContext.spark_session\r\n\r\njob = Job(glueContext)\r\njob.init(args['JOB_NAME'], args)\r\n\r\nrds_url = \"jdbc:mysql://glassdoor-db.cluster-chklsxhwihzi.us-east-1.rds.amazonaws.com:3306/glassdoor-db\"\r\nrds_properties = {\r\n    \"user\": \"admin\",\r\n    \"password\": \"#EDCvfr45tgb\",\r\n    \"driver\": \"com.mysql.cj.jdbc.Driver\"\r\n}\r\n\r\ndf_target_table = spark.read.jdbc(url=rds_url, table=\"complaints_raw\", properties=rds_properties)\r\n\r\ndf_target_table = (df_target_table.withColumn(\"CNPJ_IF\", when(length(trim(col(\"CNPJ_IF\"))) == 0, \"\")\r\n                                                        .when(col(\"CNPJ_IF\").isNull(), \"\")\r\n                                                        .otherwise(lpad(col(\"CNPJ_IF\"), 14, \"0\")))\r\n                                  .withColumn(\"Ano\", col(\"Ano\").cast(\"int\"))\r\n                                  .withColumn(\"Trimestre\", substring(col(\"Trimestre\"), 1, 1).cast(\"int\"))\r\n                                  .withColumn(\"Instituicao_financeira\", trim(regexp_replace(col(\"Instituicao_financeira\"), \"\\(conglomerado\\)\", \"\")))\r\n                                  .withColumn(\"Quantidade_de_reclamacoes_reguladas_procedentes\", col(\"Quantidade_de_reclamacoes_reguladas_procedentes\").cast(\"bigint\"))\r\n                                  .withColumn(\"Quantidade_de_reclamacoes_reguladas_outras\", col(\"Quantidade_de_reclamacoes_reguladas_outras\").cast(\"bigint\"))\r\n                                  .withColumn(\"Quantidade_de_reclamacoes_nao_reguladas\", col(\"Quantidade_de_reclamacoes_nao_reguladas\").cast(\"bigint\"))\r\n                                  .withColumn(\"Quantidade_total_de_reclamacoes\", col(\"Quantidade_total_de_reclamacoes\").cast(\"bigint\")))\r\n\r\ndf_target_table = (df_target_table.withColumnRenamed(\"Ano\", \"YEAR\")\r\n                                  .withColumnRenamed(\"Trimestre\", \"QUARTER\")\r\n                                  .withColumnRenamed(\"Categoria\", \"INSTITUTION_CATEGORY\")\r\n                                  .withColumnRenamed(\"Tipo\", \"INSTITUTION_TYPE\")\r\n                                  .withColumnRenamed(\"CNPJ_IF\", \"CNPJ\")\r\n                                  .withColumnRenamed(\"Instituicao_financeira\", \"INSTITUTION_NAME\")\r\n                                  .withColumnRenamed(\"Quantidade_de_reclamacoes_reguladas_procedentes\", \"QTY_JUSTIFIED_REGULATED_COMPLAINTS\")\r\n                                  .withColumnRenamed(\"Quantidade_de_reclamacoes_reguladas_outras\", \"QTY_OTHER_REGULATED_COMPLAINTS\")\r\n                                  .withColumnRenamed(\"Quantidade_de_reclamacoes_nao_reguladas\", \"QTY_NOT_REGULATED_COMPLAINTS\")\r\n                                  .withColumnRenamed(\"Quantidade_total_de_reclamacoes\", \"QTY_COMPLAINTS\"))\r\n\r\ndf_target_table = df_target_table.drop(\"Indice\", \"Quantidade_total_de_clientes_CCS_e_SCR\", \"Quantidade_de_clientes_CCS\", \"Quantidade_de_clientes_SCR\", \"_c14\")\r\n\r\ndf_target_table.write.jdbc(url=rds_url, table=\"complaints_trusted\", mode=\"overwrite\", properties=rds_properties)\r\n\r\njob.commit()"
}